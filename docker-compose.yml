version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:rw
      - ./models:/app/models:ro
      - backend_cache:/app/.cache
    environment:
      - PYTHONPATH=/app
      - UVICORN_WORKERS=1
      - UVICORN_LOOP=asyncio
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - prism-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://backend:8000
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - prism-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  data:
    driver: local
  models:
    driver: local
  backend_cache:
    driver: local

networks:
  prism-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 
